SilverStripe\Control\Director:
  rules:
    'graphql': '%$SilverStripe\GraphQL\Controller.default'
    'testing/graphql': '%$SilverStripe\GraphQL\Controller.testing'
SilverStripe\Core\Injector\Injector:
  SilverStripe\GraphQL\QueryHandler\QueryHandlerInterface.default:
    class: SilverStripe\GraphQL\QueryHandler\QueryHandler
    properties:
      Middlewares:
        cache: '%$SilverStripe\GraphQL\Middleware\QueryCachingMiddleware'
  SilverStripe\GraphQL\Controller.testing:
    class: SilverStripe\GraphQL\Controller
    constructor:
      schema: testing
  SilverStripe\GraphQL\Schema\Registry\ResolverRegistry:
    constructor:
      myResolver: '%$MyProject\Resolvers\Resolver'
SilverStripe\GraphQL\Schema\Schema:
  schemas:
    default:
      src:
        'app/_graphql/default'
      models:
        UncleCheese\MyProject\DataObjects\Order:
          fields: '*'
          operations: '*'
      queries:
        'companies(count: Int)': '[Company]'
        readCountries:
          type: '[Country]'
          plugins:
            paginate:
              resolver: ['MyProject\Resolvers\Resolver', 'paginateCountries']

    testing:
      src: 'app/_graphql/testing'

SilverStripe\ORM\DataObject:
  extensions:
    - SilverStripe\GraphQL\Extensions\QueryRecorderExtension
